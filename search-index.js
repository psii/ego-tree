var searchIndex = {};
searchIndex['ego_tree'] = {"items":[[0,"","ego_tree","Vec-backed mutable tree.",null,null],[3,"Tree","","A Vec-backed tree.",null,null],[3,"NodeId","","A node ID.",null,null],[3,"NodeRef","","A node reference.",null,null],[3,"NodeMut","","A node mutator.",null,null],[11,"clone","","",0,{"inputs":[{"name":"nodeid"}],"output":{"name":"self"}}],[11,"eq","","",0,{"inputs":[{"name":"nodeid"},{"name":"self"}],"output":{"name":"bool"}}],[11,"value","","Returns the value of this node.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"t"}}],[11,"id","","Returns the ID of this node.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"nodeid"}}],[11,"parent","","Returns a reference to this node's parent.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"option"}}],[11,"prev_sibling","","Returns a reference to this node's previous sibling.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"option"}}],[11,"next_sibling","","Returns a reference to this node's next sibling.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"option"}}],[11,"first_child","","Returns a reference to this node's first child.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"option"}}],[11,"last_child","","Returns a reference to this node's last child.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"option"}}],[11,"has_siblings","","Returns true if this node has siblings.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"bool"}}],[11,"has_children","","Returns true if this node has children.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"noderef"}],"output":{"name":"self"}}],[11,"eq","","",1,{"inputs":[{"name":"noderef"},{"name":"self"}],"output":{"name":"bool"}}],[11,"value","","Returns the value of this node.",2,{"inputs":[{"name":"nodemut"}],"output":{"name":"t"}}],[11,"id","","Returns the ID of this node.",2,{"inputs":[{"name":"nodemut"}],"output":{"name":"nodeid"}}],[11,"parent","","Returns a mutator of this node's parent.",2,{"inputs":[{"name":"nodemut"}],"output":{"name":"option"}}],[11,"prev_sibling","","Returns a mutator of this node's previous sibling.",2,{"inputs":[{"name":"nodemut"}],"output":{"name":"option"}}],[11,"next_sibling","","Returns a mutator of this node's next sibling.",2,{"inputs":[{"name":"nodemut"}],"output":{"name":"option"}}],[11,"first_child","","Returns a mutator of this node's first child.",2,{"inputs":[{"name":"nodemut"}],"output":{"name":"option"}}],[11,"last_child","","Returns a mutator of this node's last child.",2,{"inputs":[{"name":"nodemut"}],"output":{"name":"option"}}],[11,"has_siblings","","Returns true if this node has siblings.",2,{"inputs":[{"name":"nodemut"}],"output":{"name":"bool"}}],[11,"has_children","","Returns true if this node has children.",2,{"inputs":[{"name":"nodemut"}],"output":{"name":"bool"}}],[11,"append","","Appends a new node to this node's children, returning a mutator of the new node.",2,{"inputs":[{"name":"nodemut"},{"name":"t"}],"output":{"name":"nodemut"}}],[11,"prepend","","Prepends a new node to this node's children, returning a mutator of the new node.",2,{"inputs":[{"name":"nodemut"},{"name":"t"}],"output":{"name":"nodemut"}}],[11,"insert_before","","Inserts a new sibling before this node, returning a mutator of the new node.",2,{"inputs":[{"name":"nodemut"},{"name":"t"}],"output":{"name":"nodemut"}}],[11,"insert_after","","Inserts a new sibling before this node, returning a mutator of the new node.",2,{"inputs":[{"name":"nodemut"},{"name":"t"}],"output":{"name":"nodemut"}}],[11,"detach","","Detaches this node from its parent.",2,{"inputs":[{"name":"nodemut"}],"output":null}],[11,"append_id","","Appends a node to this node's children by ID, returning a mutator of the referenced node.",2,{"inputs":[{"name":"nodemut"},{"name":"nodeid"}],"output":{"name":"nodemut"}}],[11,"prepend_id","","Prepends a node to this node's children by ID, returning a mutator of the referenced node.",2,{"inputs":[{"name":"nodemut"},{"name":"nodeid"}],"output":{"name":"nodemut"}}],[11,"insert_id_before","","Inserts a sibling before this node by ID, returning a mutator of the referenced node.",2,{"inputs":[{"name":"nodemut"},{"name":"nodeid"}],"output":{"name":"nodemut"}}],[11,"insert_id_after","","Inserts a sibling after this node by ID, returning a mutator of the referenced node.",2,{"inputs":[{"name":"nodemut"},{"name":"nodeid"}],"output":{"name":"nodemut"}}],[11,"reparent_from_id_append","","Reparents the children of a node by ID, appending them to this node's children.",2,{"inputs":[{"name":"nodemut"},{"name":"nodeid"}],"output":null}],[11,"reparent_from_id_prepend","","Reparents the children of a node by ID, prepending them to this node's children.",2,{"inputs":[{"name":"nodemut"},{"name":"nodeid"}],"output":null}],[11,"into","","",2,{"inputs":[{"name":"nodemut"}],"output":{"name":"noderef"}}],[11,"fmt","","",3,{"inputs":[{"name":"tree"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"iter","","Tree iterators.",null,null],[3,"Values","ego_tree::iter","Iterator over node values.",null,null],[3,"ValuesMut","","Mutable iterator over node values.",null,null],[3,"IntoValues","","Iterator that moves node values out of a tree.",null,null],[3,"Nodes","","Iterator over all nodes.",null,null],[3,"Ancestors","","Iterator over node ancestors.",null,null],[3,"PrevSiblings","","Iterator over node previous siblings.",null,null],[3,"NextSiblings","","Iterator over node next siblings.",null,null],[3,"FirstChildren","","Iterator over node first children.",null,null],[3,"LastChildren","","Iterator over node last children.",null,null],[3,"Children","","Iterator over node children.",null,null],[3,"Traverse","","Iterator which traverses a subtree.",null,null],[4,"Edge","","An open or close edge of a node.",null,null],[13,"Open","","Open.",4,null],[13,"Close","","Close.",4,null],[11,"clone","","",5,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"next","","",5,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"fmt","","",5,{"inputs":[{"name":"values"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",6,{"inputs":[{"name":"valuesmut"}],"output":{"name":"option"}}],[11,"fmt","","",6,{"inputs":[{"name":"valuesmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",7,{"inputs":[{"name":"intovalues"}],"output":{"name":"option"}}],[11,"fmt","","",7,{"inputs":[{"name":"intovalues"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",8,{"inputs":[{"name":"nodes"}],"output":{"name":"option"}}],[11,"fmt","","",8,{"inputs":[{"name":"nodes"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"values","ego_tree","Returns an iterator over node values in creation order.",3,{"inputs":[{"name":"tree"}],"output":{"name":"values"}}],[11,"values_mut","","Returns a mutable iterator over node values in creation order.",3,{"inputs":[{"name":"tree"}],"output":{"name":"valuesmut"}}],[11,"into_values","","Returns an iterator that moves node values out of the tree in creation order.",3,{"inputs":[{"name":"tree"}],"output":{"name":"intovalues"}}],[11,"nodes","","Returns an iterator over all nodes, including orphans, in creation order.",3,{"inputs":[{"name":"tree"}],"output":{"name":"nodes"}}],[11,"fmt","ego_tree::iter","",9,{"inputs":[{"name":"ancestors"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",9,{"inputs":[{"name":"ancestors"}],"output":{"name":"option"}}],[11,"clone","","",9,{"inputs":[{"name":"ancestors"}],"output":{"name":"self"}}],[11,"eq","","",9,{"inputs":[{"name":"ancestors"},{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"prevsiblings"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",10,{"inputs":[{"name":"prevsiblings"}],"output":{"name":"option"}}],[11,"clone","","",10,{"inputs":[{"name":"prevsiblings"}],"output":{"name":"self"}}],[11,"eq","","",10,{"inputs":[{"name":"prevsiblings"},{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"nextsiblings"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",11,{"inputs":[{"name":"nextsiblings"}],"output":{"name":"option"}}],[11,"clone","","",11,{"inputs":[{"name":"nextsiblings"}],"output":{"name":"self"}}],[11,"eq","","",11,{"inputs":[{"name":"nextsiblings"},{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"firstchildren"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",12,{"inputs":[{"name":"firstchildren"}],"output":{"name":"option"}}],[11,"clone","","",12,{"inputs":[{"name":"firstchildren"}],"output":{"name":"self"}}],[11,"eq","","",12,{"inputs":[{"name":"firstchildren"},{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"lastchildren"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",13,{"inputs":[{"name":"lastchildren"}],"output":{"name":"option"}}],[11,"clone","","",13,{"inputs":[{"name":"lastchildren"}],"output":{"name":"self"}}],[11,"eq","","",13,{"inputs":[{"name":"lastchildren"},{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"children"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",14,{"inputs":[{"name":"children"}],"output":{"name":"option"}}],[11,"next_back","","",14,{"inputs":[{"name":"children"}],"output":{"name":"option"}}],[11,"clone","","",14,{"inputs":[{"name":"children"}],"output":{"name":"self"}}],[11,"eq","","",14,{"inputs":[{"name":"children"},{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"edge"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"edge"}],"output":{"name":"self"}}],[11,"eq","","",4,{"inputs":[{"name":"edge"},{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"traverse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",15,{"inputs":[{"name":"traverse"}],"output":{"name":"option"}}],[11,"clone","","",15,{"inputs":[{"name":"traverse"}],"output":{"name":"self"}}],[11,"eq","","",15,{"inputs":[{"name":"traverse"},{"name":"self"}],"output":{"name":"bool"}}],[11,"ancestors","ego_tree","Returns an iterator over this node's ancestors.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"ancestors"}}],[11,"prev_siblings","","Returns an iterator over this node's previous siblings.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"prevsiblings"}}],[11,"next_siblings","","Returns an iterator over this node's next siblings.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"nextsiblings"}}],[11,"children","","Returns an iterator over this node's children.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"children"}}],[11,"first_children","","Returns an iterator over this node's first children.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"firstchildren"}}],[11,"last_children","","Returns an iterator over this node's last children.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"lastchildren"}}],[11,"traverse","","Returns an iterator which traverses the subtree starting at this node.",1,{"inputs":[{"name":"noderef"}],"output":{"name":"traverse"}}],[11,"fmt","","",0,{"inputs":[{"name":"nodeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"noderef"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"nodemut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new tree with a root node.",3,{"inputs":[{"name":"tree"},{"name":"t"}],"output":{"name":"self"}}],[11,"with_capacity","","Creates a new tree of the specified capacity with a root node.",3,{"inputs":[{"name":"tree"},{"name":"t"},{"name":"usize"}],"output":{"name":"self"}}],[11,"root","","Returns a reference to the root node.",3,{"inputs":[{"name":"tree"}],"output":{"name":"noderef"}}],[11,"root_mut","","Returns a mutator of the root node.",3,{"inputs":[{"name":"tree"}],"output":{"name":"nodemut"}}],[11,"orphan","","Creates an orphan node, returning a mutator of it.",3,{"inputs":[{"name":"tree"},{"name":"t"}],"output":{"name":"nodemut"}}],[11,"get","","Returns a reference to the specified node.",3,{"inputs":[{"name":"tree"},{"name":"nodeid"}],"output":{"name":"noderef"}}],[11,"get_mut","","Returns a mutator of the specified node.",3,{"inputs":[{"name":"tree"},{"name":"nodeid"}],"output":{"name":"nodemut"}}],[11,"default","","",3,{"inputs":[{"name":"tree"}],"output":{"name":"self"}}],[11,"clone","","",3,{"inputs":[{"name":"tree"}],"output":{"name":"self"}}],[11,"eq","","",3,{"inputs":[{"name":"tree"},{"name":"self"}],"output":{"name":"bool"}}],[14,"tree!","","Creates a `Tree` from expressions.",null,null]],"paths":[[3,"NodeId"],[3,"NodeRef"],[3,"NodeMut"],[3,"Tree"],[4,"Edge"],[3,"Values"],[3,"ValuesMut"],[3,"IntoValues"],[3,"Nodes"],[3,"Ancestors"],[3,"PrevSiblings"],[3,"NextSiblings"],[3,"FirstChildren"],[3,"LastChildren"],[3,"Children"],[3,"Traverse"]]};
initSearch(searchIndex);
